{"version":3,"sources":["configs/site-configs.tsx","components/Footer.tsx","assets/images/user.jpg","components/Topnav.tsx","layouts/Layout.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["siteConfig","copyright","Date","getFullYear","author","name","accounts","url","label","type","icon","iconProps","variant","size","isRound","Footer","as","isInline","spacing","p","justifyContent","alignItems","w","maxW","mx","flexDirection","flexFlow","ju","textAlign","fontSize","color","useColorModeValue","map","sc","index","Link","isExternal","href","colorScheme","webLinks","path","NavLink","props","RouterNavLink","px","py","rounded","_hover","textDecoration","bg","_activeLink","onClick","onClose","to","Topnav","useDisclosure","isOpen","onOpen","boxShadow","h","display","src","User","base","md","link","pb","Layout","App","resetCSS","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5666143e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  FaGithub,\r\n  FaLinkedin,\r\n  FaTwitter,\r\n  FaStackOverflow,\r\n  FaHackerrank,\r\n} from \"react-icons/fa\";\r\nimport { FiMail } from \"react-icons/fi\";\r\nimport { SiLeetcode } from \"react-icons/si\";\r\n\r\nconst siteConfig = {\r\n  copyright: `Copyright © ${new Date().getFullYear()} Makhlouk Oussama. All Rights Reserved.`,\r\n  author: {\r\n    name: \"Makhlouk Oussama\",\r\n    accounts: [\r\n      {\r\n        url: \"https://github.com/OussamaM1\",\r\n        label: \"Github Account\",\r\n        type: \"gray\",\r\n        icon: <FaGithub />,\r\n      },\r\n      {\r\n        url: \"https://leetcode.com/OussamaM1/\",\r\n        label: \"LeetCode Account\",\r\n        type: \"orange\",\r\n        icon: <SiLeetcode />,\r\n      },\r\n      {\r\n        url: \"https://www.hackerrank.com/OussamaMakhlouk\",\r\n        label: \"Hackerrank Account\",\r\n        type: \"green\",\r\n        icon: <FaHackerrank />,\r\n      },\r\n      {\r\n        url: \"https://twitter.com/OMakhlouk\",\r\n        label: \"Twitter Account\",\r\n        type: \"twitter\",\r\n        icon: <FaTwitter />,\r\n      },\r\n      {\r\n        url: \"https://www.linkedin.com/in/oussama-makhlouk/\",\r\n        label: \"LinkedIn Account\",\r\n        type: \"linkedin\",\r\n        icon: <FaLinkedin />,\r\n      },\r\n      {\r\n        url: \"https://stackoverflow.com/users/15061745/oussama-makhlouk\",\r\n        label: \"Stack Overflow Account\",\r\n        type: \"orange\",\r\n        icon: <FaStackOverflow />,\r\n      },\r\n      {\r\n        url: \"mailto:makhloukoussama1@gmail.com\",\r\n        label: \"Mail Oussama\",\r\n        type: \"red\",\r\n        icon: <FiMail />,\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nexport default siteConfig;\r\n","import {\r\n  Box,\r\n  Flex,\r\n  Stack,\r\n  Text,\r\n  useColorModeValue,\r\n  IconButton,\r\n  Link,\r\n} from \"@chakra-ui/react\";\r\nimport siteConfig from \"../configs/site-configs\";\r\n\r\nconst iconProps = {\r\n  variant: \"ghost\",\r\n  size: \"lg\",\r\n  isRound: true,\r\n};\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Stack\r\n      as=\"footer\"\r\n      isInline\r\n      spacing={[1, 2]}\r\n      p={4}\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      w={[\"100%\", \"85%\", \"80%\"]}\r\n      maxW={800}\r\n      mx=\"auto\"\r\n    >\r\n      <Flex\r\n        flexDirection={[\"column\", \"column\", \"row\"]}\r\n        flexFlow={[\"column-reverse\", \"column-reverse\"]}\r\n        justifyContent={[\"center\", \"space-between\"]}\r\n        alignItems=\"center\"\r\n        w=\"100%\"\r\n        ju\r\n      >\r\n        <Text\r\n          textAlign=\"center\"\r\n          fontSize=\"sm\"\r\n          color={useColorModeValue(\"gray.500\", \"gray.200\")}\r\n        >\r\n          © {new Date().getFullYear()} Makhlouk Oussama{\" \"}\r\n        </Text>\r\n        <Box textAlign=\"center\">\r\n          {siteConfig.author.accounts.map((sc, index) => (\r\n            <IconButton\r\n              key={index}\r\n              as={Link}\r\n              isExternal\r\n              href={sc.url}\r\n              aria-label={sc.label}\r\n              colorScheme={sc.type}\r\n              icon={sc.icon}\r\n              {...iconProps}\r\n            />\r\n          ))}\r\n        </Box>\r\n      </Flex>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/user.bcc4fa3b.jpg\";","import {\r\n  Box,\r\n  Flex,\r\n  Avatar,\r\n  HStack,\r\n  Link,\r\n  IconButton,\r\n  useDisclosure,\r\n  useColorModeValue,\r\n  Stack,\r\n} from \"@chakra-ui/react\";\r\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\r\nimport { GiHamburgerMenu } from \"react-icons/gi\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport { FaGithub } from \"react-icons/fa\";\r\nimport User from \"../assets/images/user.jpg\";\r\n\r\nconst webLinks = [\r\n  { name: \"About\", path: \"/about\" },\r\n  { name: \"Tech Stack\", path: \"/tech-stack\" },\r\n  { name: \"Projects\", path: \"/projects\" },\r\n  { name: \"Achievements\", path: \"/achievements\" },\r\n];\r\n\r\ninterface NavLinkProps {\r\n  index?: number;\r\n  name: string;\r\n  path: string;\r\n  onClose: () => void;\r\n}\r\n\r\nconst NavLink = (props: NavLinkProps) => {\r\n  return (\r\n    <Link\r\n      as={RouterNavLink}\r\n      px={2}\r\n      py={1}\r\n      rounded={\"md\"}\r\n      _hover={{\r\n        textDecoration: \"none\",\r\n        bg: useColorModeValue(\"gray.200\", \"gray.900\"),\r\n      }}\r\n      _activeLink={{\r\n        color: useColorModeValue(\"blue.500\", \"blue.200\"),\r\n      }}\r\n      onClick={() => props.onClose()}\r\n      to={props.path}\r\n    >\r\n      {props.name}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default function Topnav() {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  return (\r\n    <>\r\n      <Box bg={useColorModeValue(\"white\", \"gray.700\")} px={4} boxShadow={\"lg\"}>\r\n        <Flex\r\n          h={16}\r\n          alignItems={\"center\"}\r\n          justifyContent={\"space-between\"}\r\n          w={[\"90%\", \"85%\", \"80%\"]}\r\n          maxW={800}\r\n          mx=\"auto\"\r\n        >\r\n          <IconButton\r\n            size={\"md\"}\r\n            icon={isOpen ? <AiOutlineClose /> : <GiHamburgerMenu />}\r\n            aria-label={\"Open Menu\"}\r\n            display={[\"inherit\", \"inherit\", \"none\"]}\r\n            onClick={isOpen ? onClose : onOpen}\r\n          />\r\n          <HStack spacing={8} alignItems={\"center\"}>\r\n            <Box>\r\n              <Avatar as={Link} size={\"sm\"} href={\"/\"} src={User} />\r\n            </Box>\r\n            <HStack\r\n              as={\"nav\"}\r\n              spacing={4}\r\n              display={{ base: \"none\", md: \"flex\" }}\r\n            >\r\n              {webLinks.map((link, index) => (\r\n                <NavLink\r\n                  key={index}\r\n                  name={link.name}\r\n                  path={link.path}\r\n                  onClose={onClose}\r\n                />\r\n              ))}\r\n            </HStack>\r\n          </HStack>\r\n          <Flex alignItems={\"center\"}>\r\n            <IconButton\r\n              as={Link}\r\n              href={\"https://github.com/OussamaM1\"}\r\n              size={\"md\"}\r\n              icon={<FaGithub />}\r\n              aria-label={\"Github account\"}\r\n              bg={useColorModeValue(\"white\", \"gray.700\")}\r\n              _hover={{\r\n                textDecoration: \"none\",\r\n                bg: useColorModeValue(\"gray.200\", \"gray.900\"),\r\n              }}\r\n            />\r\n          </Flex>\r\n        </Flex>\r\n\r\n        {isOpen ? (\r\n          <Box\r\n            pb={4}\r\n            w={[\"100%\", \"100%\", \"80%\"]}\r\n            maxW={800}\r\n            display={[\"inherit\", \"inherit\", \"none\"]}\r\n          >\r\n            <Stack as={\"nav\"} spacing={4}>\r\n              {webLinks.map((link, index) => (\r\n                <NavLink\r\n                  index={index}\r\n                  name={link.name}\r\n                  path={link.path}\r\n                  onClose={onClose}\r\n                />\r\n              ))}\r\n            </Stack>\r\n          </Box>\r\n        ) : null}\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","import { HashRouter as Router } from \"react-router-dom\";\r\nimport Footer from \"../components/Footer\";\r\nimport Topnav from \"../components/Topnav\";\r\n\r\nconst Layout = () => {\r\n  return (\r\n    <Router>\r\n      <Topnav />\r\n      <Footer />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { ChakraProvider } from \"@chakra-ui/react\";\nimport Layout from \"./layouts/Layout\";\n\nfunction App() {\n  return (\n    <ChakraProvider resetCSS={true}>\n      <Layout />\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}